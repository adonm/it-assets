# Generated by Django 2.2.27 on 2022-03-03 03:05

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import nginx.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rancher', '0001_initial'),
        ('registers', '0027_changerequest_post_complete_email_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('level', models.PositiveSmallIntegerField(editable=False)),
                ('score', models.BigIntegerField(editable=False, unique=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='nginx.Domain')),
            ],
        ),
        migrations.CreateModel(
            name='SystemAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='alias', to='registers.ITSystem')),
            ],
            options={
                'verbose_name_plural': 'system aliases',
            },
        ),
        migrations.CreateModel(
            name='SystemEnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=128, unique=True)),
                ('redirect_to_other', models.CharField(editable=False, max_length=128, null=True)),
                ('redirect_path', models.CharField(editable=False, max_length=128, null=True)),
                ('original_configs', django.contrib.postgres.fields.jsonb.JSONField(editable=False, null=True)),
                ('configure_txt', models.TextField(editable=False)),
                ('auth_domain', models.PositiveSmallIntegerField(choices=[(11, 'DBCA'), (12, 'DPAW'), (13, 'UAT'), (0, '-')], editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('config_modified', models.DateTimeField(editable=False, null=True)),
                ('config_changed_columns', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), editable=False, null=True, size=None)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='webapps', to='nginx.Domain')),
                ('redirect_to', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='redirect_from', to='nginx.WebApp')),
                ('system_alias', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='webapps', to='nginx.SystemAlias')),
                ('system_env', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='webapps', to='nginx.SystemEnv')),
                ('clientip_subnet', models.CharField(editable=False, max_length=64, null=True, verbose_name='users')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WebAppLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(editable=False, max_length=256)),
                ('location_type', models.PositiveSmallIntegerField(choices=[(1, 'Exact Location'), (2, 'Prefix Location'), (3, 'Case Sensitive Regex Location'), (4, 'Case Insensitive Regex Location'), (5, 'Non-regex Location')], editable=False)),
                ('auth_type', models.PositiveSmallIntegerField(choices=[(0, 'SSO Not Required'), (1, 'SSO Required'), (2, 'SSO Dual Auth Required'), (11, 'SSO To DBCA'), (12, 'SSO To DPAW'), (13, 'SSO To UAT')])),
                ('cors_enabled', models.BooleanField(default=False, editable=False)),
                ('forward_protocol', models.PositiveSmallIntegerField(choices=[(1, 'Http'), (2, 'Https'), (3, 'Uwsgi')], editable=False, null=True)),
                ('forward_path', models.CharField(editable=False, max_length=256, null=True)),
                ('redirect', models.CharField(editable=False, max_length=256, null=True)),
                ('return_code', models.PositiveSmallIntegerField(editable=False, null=True)),
                ('refuse', models.BooleanField(default=False, editable=False)),
                ('original_configs', django.contrib.postgres.fields.jsonb.JSONField(editable=False, null=True)),
                ('configure_txt', models.TextField(editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('config_modified', models.DateTimeField(editable=False, null=True)),
                ('config_changed_columns', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), editable=False, null=True, size=None)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('app', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='nginx.WebApp')),
                ('score', models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                'unique_together': {('app', 'location_type', 'location')},
            },
        ),
        migrations.CreateModel(
            name='WebServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('category', models.PositiveSmallIntegerField(choices=[(1, 'AWS Server'), (2, 'Rancher Cluster'), (4, 'Docker Server'), (3, 'Web Server'), (5, 'External Server')], null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('other_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), editable=False, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='WebAppListen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listen_host', models.CharField(editable=False, max_length=128)),
                ('listen_port', models.PositiveIntegerField(editable=False)),
                ('https', models.BooleanField(default=False, editable=False)),
                ('configure_txt', models.CharField(editable=False, max_length=256)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('config_modified', models.DateTimeField(editable=False, null=True)),
                ('config_changed_columns', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), editable=False, null=True, size=None)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('app', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='listens', to='nginx.WebApp')),
            ],
            options={
                'unique_together': {('app', 'listen_host', 'listen_port')},
            },
        ),
        migrations.CreateModel(
            name='WebAppLocationServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.PositiveIntegerField()),
                ('user_added', models.BooleanField(default=True, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='nginx.WebAppLocation')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='nginx.WebServer')),
                ('rancher_workload', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servers', to='rancher.Workload')),
            ],
            options={
                'unique_together': {('location', 'server', 'port')},
            },
        ),
        migrations.CreateModel(
            name='RequestParameterFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_code', models.CharField(help_text="A lambda function with two parameters 'webserver' and 'request_path'", max_length=512, unique=True)),
                ('included_parameters', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, help_text='The list of parameters', null=True, size=None)),
                ('excluded_parameters', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, help_text='The list of parameters excluded from the request parameters', null=True, size=None)),
                ('case_insensitive', models.BooleanField(default=True)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='The order to find the filter rule, high order means hight priority')),
                ('changed', models.DateTimeField(auto_now=True, help_text='The last time when the filter was changed')),
                ('applied', models.DateTimeField(editable=False, help_text='The last time when the filter was applied to the existed data', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestPathNormalizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_code', models.CharField(help_text="A lambda function with two parameters 'webserver' and 'request_path'", max_length=512, unique=True)),
                ('normalize_code', models.TextField(help_text="The source code of the module which contains a method 'def normalize(request_path)' to return a normalized request  path")),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='The order to find the filter rule, high order means hight priority')),
                ('changed', models.DateTimeField(auto_now=True, help_text='The last time when the filter was changed')),
                ('applied', models.DateTimeField(editable=False, help_text='The last time when the filter was applied to the existed data', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebAppAccessDailyReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_day', models.DateField(editable=False)),
                ('webserver', models.CharField(editable=False, max_length=256)),
                ('requests', models.PositiveIntegerField(default=0, editable=False)),
                ('success_requests', models.PositiveIntegerField(default=0, editable=False)),
                ('error_requests', models.PositiveIntegerField(default=0, editable=False)),
                ('unauthorized_requests', models.PositiveIntegerField(default=0, editable=False)),
                ('timeout_requests', models.PositiveIntegerField(default=0, editable=False)),
                ('webapp', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dailyreports', to='nginx.WebApp')),
                ('client_closed_requests', models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                'unique_together': {('log_day', 'webserver')},
                'index_together': {('webapp',), ('log_day', 'webapp')},
                'get_latest_by': 'log_day',
            },
        ),
        migrations.CreateModel(
            name='WebAppAccessLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_starttime', models.DateTimeField(editable=False)),
                ('log_endtime', models.DateTimeField(editable=False)),
                ('webserver', models.CharField(editable=False, max_length=256)),
                ('request_path', models.CharField(editable=False, max_length=512)),
                ('path_parameters', models.TextField(editable=False, null=True)),
                ('all_path_parameters', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), editable=False, null=True, size=None)),
                ('http_status', models.PositiveIntegerField(editable=False)),
                ('requests', models.PositiveIntegerField(editable=False)),
                ('max_response_time', models.FloatField(editable=False)),
                ('min_response_time', models.FloatField(editable=False)),
                ('avg_response_time', models.FloatField(editable=False)),
                ('total_response_time', models.FloatField(editable=False)),
                ('webapp', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='nginx.WebApp')),
                ('webapplocation', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='nginx.WebAppLocation')),
            ],
            options={
                'unique_together': {('log_starttime', 'webserver', 'request_path', 'http_status', 'path_parameters')},
                'index_together': {('webapp', 'http_status'), ('webserver', 'http_status'), ('log_starttime', 'webapp', 'webapplocation'), ('webapp', 'webapplocation')},
            },
            bases=(nginx.models.PathParametersMixin, models.Model),
        ),
        migrations.CreateModel(
            name='WebAppAccessDailyLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_day', models.DateField(editable=False)),
                ('webserver', models.CharField(editable=False, max_length=256)),
                ('request_path', models.CharField(editable=False, max_length=512)),
                ('path_parameters', models.TextField(editable=False, null=True)),
                ('all_path_parameters', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), editable=False, null=True, size=None)),
                ('http_status', models.PositiveIntegerField(editable=False)),
                ('requests', models.PositiveIntegerField(editable=False)),
                ('max_response_time', models.FloatField(editable=False)),
                ('min_response_time', models.FloatField(editable=False)),
                ('avg_response_time', models.FloatField(editable=False)),
                ('total_response_time', models.FloatField(editable=False)),
                ('webapp', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dailylogs', to='nginx.WebApp')),
                ('webapplocation', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dailylogs', to='nginx.WebAppLocation')),
            ],
            options={
                'unique_together': {('log_day', 'webserver', 'request_path', 'http_status', 'path_parameters')},
                'index_together': {('webapp', 'webapplocation'), ('log_day', 'webapp', 'webapplocation'), ('webserver', 'request_path')},
            },
            bases=(nginx.models.PathParametersMixin, models.Model),
        ),
    ]
