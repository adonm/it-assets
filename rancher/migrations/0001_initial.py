# Generated by Django 2.2.10 on 2020-06-26 06:15

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('clusterid', models.CharField(editable=False, max_length=64, null=True)),
                ('ip', models.CharField(editable=False, max_length=128, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DatabaseServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(editable=False, max_length=128)),
                ('ip', models.CharField(editable=False, max_length=32, null=True)),
                ('port', models.PositiveIntegerField(editable=False, null=True)),
                ('internal_name', models.CharField(editable=False, max_length=128, null=True)),
                ('internal_port', models.PositiveIntegerField(editable=False, null=True)),
                ('other_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), editable=False, null=True, size=None)),
                ('kind', models.CharField(choices=[('posgres', 'posgres'), ('mysql', 'mysql'), ('oracle', 'oracle')], max_length=16, null=True)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['host', 'port'],
            },
        ),
        migrations.CreateModel(
            name='DatabaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(editable=False, max_length=128)),
                ('password', models.CharField(editable=False, max_length=128, null=True)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('server', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='rancher.DatabaseServer')),
            ],
            options={
                'unique_together': {('server', 'user')},
                'ordering': ['server', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Ingress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=128)),
                ('api_version', models.CharField(editable=False, max_length=64)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='ingresses', to='rancher.Cluster')),
            ],
            options={
                'ordering': ['cluster__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='IngressRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.CharField(editable=False, max_length=128)),
                ('hostname', models.CharField(editable=False, max_length=128)),
                ('port', models.PositiveIntegerField(editable=False, null=True)),
                ('path', models.CharField(default='', editable=False, max_length=256)),
                ('servicename', models.CharField(editable=False, max_length=256)),
                ('serviceport', models.PositiveIntegerField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='ingresserules', to='rancher.Cluster')),
                ('ingress', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='rancher.Ingress')),
            ],
            options={
                'unique_together': {('ingress', 'protocol', 'hostname', 'path'), ('cluster', 'servicename')},
            },
        ),
        migrations.CreateModel(
            name='Namespace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=64)),
                ('api_version', models.CharField(editable=False, max_length=64)),
                ('modified', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(editable=False)),
                ('cluster', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='namespaces', to='rancher.Cluster')),
            ],
            options={
                'ordering': ['cluster__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PersistentVolume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=128)),
                ('kind', models.CharField(editable=False, max_length=64)),
                ('storage_class_name', models.CharField(editable=False, max_length=64)),
                ('volume_mode', models.CharField(editable=False, max_length=64)),
                ('uuid', models.CharField(editable=False, max_length=128, unique=True)),
                ('volumepath', models.CharField(editable=False, max_length=256, null=True)),
                ('capacity', models.PositiveIntegerField(editable=False, null=True)),
                ('writable', models.BooleanField(default=False, editable=False)),
                ('reclaim_policy', models.CharField(editable=False, max_length=64, null=True)),
                ('node_affinity', models.TextField(editable=False, null=True)),
                ('api_version', models.CharField(editable=False, max_length=64)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='volumes', to='rancher.Cluster')),
            ],
            options={
                'unique_together': {('cluster', 'name'), ('cluster', 'volumepath')},
                'ordering': ['cluster__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('projectid', models.CharField(max_length=64)),
                ('cluster', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='projects', to='rancher.Cluster')),
            ],
            options={
                'unique_together': {('cluster', 'projectid')},
                'ordering': ['cluster__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Workload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=128)),
                ('kind', models.CharField(editable=False, max_length=64)),
                ('replicas', models.PositiveSmallIntegerField(editable=False, null=True)),
                ('image', models.CharField(editable=False, max_length=128)),
                ('image_pullpolicy', models.CharField(editable=False, max_length=64, null=True)),
                ('cmd', models.CharField(editable=False, max_length=512, null=True)),
                ('schedule', models.CharField(editable=False, max_length=32, null=True)),
                ('suspend', models.NullBooleanField(editable=False)),
                ('failedjobshistorylimit', models.PositiveSmallIntegerField(editable=False, null=True)),
                ('successfuljobshistorylimit', models.PositiveSmallIntegerField(editable=False, null=True)),
                ('concurrency_policy', models.CharField(editable=False, max_length=128, null=True)),
                ('api_version', models.CharField(editable=False, max_length=64)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='workloads', to='rancher.Cluster')),
                ('namespace', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='workloads', to='rancher.Namespace')),
                ('project', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='workloads', to='rancher.Project')),
            ],
            options={
                'unique_together': {('cluster', 'namespace', 'name')},
                'ordering': ['cluster__name', 'namespace', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PersistentVolumeClaim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=128)),
                ('writable', models.BooleanField(default=False, editable=False)),
                ('api_version', models.CharField(editable=False, max_length=64)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='volumeclaims', to='rancher.Cluster')),
                ('namespace', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='volumeclaims', to='rancher.Namespace')),
                ('project', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='volumeclaims', to='rancher.Project')),
                ('volume', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='volumeclaims', to='rancher.PersistentVolume')),
            ],
            options={
                'unique_together': {('cluster', 'namespace', 'name'), ('volume', 'name')},
            },
        ),
        migrations.AddField(
            model_name='namespace',
            name='project',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='namespaces', to='rancher.Project'),
        ),
        migrations.AddField(
            model_name='ingress',
            name='namespace',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ingresses', to='rancher.Namespace'),
        ),
        migrations.AddField(
            model_name='ingress',
            name='project',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='ingresses', to='rancher.Project'),
        ),
        migrations.AddField(
            model_name='databaseserver',
            name='workload',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rancher.Workload'),
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=128)),
                ('created', models.DateTimeField(editable=False)),
                ('server', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='databases', to='rancher.DatabaseServer')),
            ],
            options={
                'ordering': ['server', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WorkloadVolume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=128)),
                ('mountpath', models.CharField(editable=False, max_length=128)),
                ('subpath', models.CharField(editable=False, max_length=128, null=True)),
                ('volumepath', models.CharField(editable=False, max_length=612, null=True)),
                ('other_config', models.TextField(null=True)),
                ('writable', models.BooleanField(default=False, editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('volume', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='rancher.PersistentVolume')),
                ('volume_claim', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='rancher.PersistentVolumeClaim')),
                ('workload', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='volumes', to='rancher.Workload')),
            ],
            options={
                'unique_together': {('workload', 'mountpath'), ('workload', 'name')},
                'ordering': ['workload', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WorkloadListening',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicename', models.CharField(editable=False, max_length=128)),
                ('container_port', models.PositiveIntegerField(editable=False)),
                ('protocol', models.CharField(editable=False, max_length=16)),
                ('listen_port', models.PositiveIntegerField(editable=False, null=True)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('ingress_rule', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='listenings', to='rancher.IngressRule')),
                ('workload', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='listenings', to='rancher.Workload')),
            ],
            options={
                'unique_together': {('workload', 'servicename')},
            },
        ),
        migrations.CreateModel(
            name='WorkloadEnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=128)),
                ('value', models.CharField(editable=False, max_length=1024, null=True)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('workload', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='envs', to='rancher.Workload')),
            ],
            options={
                'unique_together': {('workload', 'name')},
                'ordering': ['workload', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WorkloadDatabase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(editable=False, max_length=128, null=True)),
                ('schema', models.CharField(editable=False, max_length=128, null=True)),
                ('config_items', models.CharField(editable=False, max_length=256)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(editable=False)),
                ('refreshed', models.DateTimeField(auto_now=True)),
                ('database', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='rancher.Database')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='rancher.DatabaseUser')),
                ('workload', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='databases', to='rancher.Workload')),
            ],
            options={
                'unique_together': {('workload', 'database', 'config_items')},
                'ordering': ['workload', 'database'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='namespace',
            unique_together={('cluster', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='ingress',
            unique_together={('cluster', 'namespace', 'name')},
        ),
        migrations.AlterIndexTogether(
            name='databaseserver',
            index_together={('host', 'port'), ('internal_name', 'internal_port')},
        ),
    ]
