# Generated by Django 2.2.21 on 2021-05-10 02:12

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.contrib.postgres.fields.citext
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import organisation.utils


class Migration(migrations.Migration):

    replaces = [('organisation', '0001_initial'), ('organisation', '0002_auto_20180504_0914'), ('organisation', '0003_auto_20180726_1343'), ('organisation', '0004_locations_20180726_1346'), ('organisation', '0005_auto_20180816_1504'), ('organisation', '0006_auto_20180829_1733'), ('organisation', '0007_auto_20180829_1733'), ('organisation', '0008_costcentre_ascender_code'), ('organisation', '0009_location_ascender_code'), ('organisation', '0010_auto_20190212_0913'), ('organisation', '0011_auto_20190507_1619'), ('organisation', '0012_auto_20190903_1039'), ('organisation', '0013_auto_20200731_1041'), ('organisation', '0014_auto_20200804_1132'), ('organisation', '0015_adaction'), ('organisation', '0016_departmentuser_alesco_data_updated'), ('organisation', '0017_remove_costcentre_division'), ('organisation', '0018_auto_20200916_1056'), ('organisation', '0019_auto_20200929_0844'), ('organisation', '0020_auto_20201021_1352'), ('organisation', '0021_auto_20201104_1252'), ('organisation', '0022_auto_20201109_1007'), ('organisation', '0023_remove_orgunit_details'), ('organisation', '0024_auto_20201202_1110'), ('organisation', '0025_auto_20201202_1351'), ('organisation', '0026_auto_20201203_1018'), ('organisation', '0027_remove_departmentuser_expiry_date'), ('organisation', '0028_remove_costcentre_name')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CostCentre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16, unique=True)),
                ('chart_acct_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='chart of accounts name')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='DepartmentUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('ad_guid', models.CharField(blank=True, help_text='Locally stored AD GUID. This field must match GUID in the AD object for sync to be successful', max_length=48, null=True, unique=True, verbose_name='AD GUID')),
                ('azure_guid', models.CharField(blank=True, help_text='Azure AD GUID.', max_length=48, null=True, unique=True, verbose_name='Azure GUID')),
                ('employee_id', models.CharField(blank=True, help_text='HR Employee ID.', max_length=128, null=True, unique=True, verbose_name='Employee ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, editable=False, help_text='Pre-Windows 2000 login username.', max_length=128, null=True)),
                ('name', models.CharField(help_text='Format: [Given name] [Surname]', max_length=128)),
                ('given_name', models.CharField(help_text='Legal first name (matches birth certificate/password/etc.)', max_length=128, null=True)),
                ('surname', models.CharField(help_text='Legal surname (matches birth certificate/password/etc.)', max_length=128, null=True)),
                ('name_update_reference', models.CharField(blank=True, help_text='Reference for name/CC change request', max_length=512, null=True, verbose_name='update reference')),
                ('preferred_name', models.CharField(blank=True, help_text='Employee-editable preferred name.', max_length=256, null=True)),
                ('title', models.CharField(help_text='Occupation position title (should match Alesco)', max_length=128, null=True)),
                ('position_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Full time'), (1, 'Part time'), (2, 'Casual'), (3, 'Other')], default=0, help_text='Employee position working arrangement (should match Alesco status)', null=True)),
                ('telephone', models.CharField(blank=True, max_length=128, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=128, null=True)),
                ('extension', models.CharField(blank=True, max_length=128, null=True, verbose_name='VoIP extension')),
                ('home_phone', models.CharField(blank=True, max_length=128, null=True)),
                ('other_phone', models.CharField(blank=True, max_length=128, null=True)),
                ('active', models.BooleanField(default=True, editable=False, help_text='Account is active within Active Directory.')),
                ('vip', models.BooleanField(default=False, help_text='An individual who carries out a critical role for the department')),
                ('executive', models.BooleanField(default=False, help_text='An individual who is an executive')),
                ('contractor', models.BooleanField(default=False, help_text='An individual who is an external contractor (does not include agency contract staff)')),
                ('notes', models.TextField(blank=True, help_text='Records relevant to any AD account extension, expiry or deletion (e.g. ticket #).', null=True)),
                ('working_hours', models.TextField(blank=True, default='N/A', help_text='Description of normal working hours', null=True)),
                ('account_type', models.PositiveSmallIntegerField(blank=True, choices=[(2, 'L1 User Account - Permanent'), (3, 'L1 User Account - Agency contract'), (0, 'L1 User Account - Department fixed-term contract'), (8, 'L1 User Account - Seasonal'), (6, 'L1 User Account - Vendor'), (7, 'L1 User Account - Volunteer'), (1, 'L1 User Account - Other/Alumni'), (11, 'L1 User Account - RoomMailbox'), (12, 'L1 User Account - EquipmentMailbox'), (10, 'L2 Service Account - System'), (5, 'L1 Group (shared) Mailbox - Shared account'), (9, 'L1 Role Account - Role-based account'), (4, 'Terminated'), (14, 'Unknown - AD disabled'), (15, 'Cleanup - Permanent'), (16, 'Unknown - AD active')], help_text='Employee account status (should match Alesco status)', null=True)),
                ('alesco_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Readonly data from Alesco', null=True)),
                ('security_clearance', models.BooleanField(default=False, help_text='Security clearance approved by CC Manager (confidentiality\n        agreement, referee check, police clearance, etc.', verbose_name='security clearance granted')),
                ('shared_account', models.BooleanField(default=False, editable=False, help_text='Automatically set from account type.')),
                ('cost_centre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.CostCentre')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('address', models.TextField(blank=True, unique=True)),
                ('pobox', models.TextField(blank=True, verbose_name='PO Box')),
                ('phone', models.CharField(blank=True, max_length=128, null=True)),
                ('fax', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.CharField(blank=True, max_length=128, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('url', models.CharField(blank=True, help_text='URL to webpage with more information', max_length=2000, null=True)),
                ('bandwidth_url', models.CharField(blank=True, help_text='URL to prtg graph of bw utilisation', max_length=2000, null=True)),
                ('active', models.BooleanField(default=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.DepartmentUser')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OrgUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_type', models.PositiveSmallIntegerField(choices=[(0, 'Department (Tier one)'), (1, 'Division (Tier two)'), (11, 'Division'), (9, 'Group'), (2, 'Branch'), (7, 'Section'), (3, 'Region'), (6, 'District'), (8, 'Unit'), (5, 'Office'), (10, 'Work centre')])),
                ('name', models.CharField(max_length=256, unique=True)),
                ('acronym', models.CharField(blank=True, max_length=16, null=True)),
                ('active', models.BooleanField(default=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.Location')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.DepartmentUser')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='departmentuser',
            name='org_unit',
            field=models.ForeignKey(blank=True, help_text="The organisational unit that represents the user's primary physical location (also set their distribution group).", null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.OrgUnit', verbose_name='organisational unit'),
        ),
        migrations.AddField(
            model_name='costcentre',
            name='admin',
            field=models.ForeignKey(blank=True, help_text='Adminstration Officer', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='admin_ccs', to='organisation.DepartmentUser'),
        ),
        migrations.AddField(
            model_name='costcentre',
            name='business_manager',
            field=models.ForeignKey(blank=True, help_text='Business Manager', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bmanage_ccs', to='organisation.DepartmentUser'),
        ),
        migrations.AddField(
            model_name='costcentre',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='manage_ccs', to='organisation.DepartmentUser'),
        ),
        migrations.AddField(
            model_name='costcentre',
            name='org_position',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.OrgUnit'),
        ),
        migrations.AddField(
            model_name='costcentre',
            name='tech_contact',
            field=models.ForeignKey(blank=True, help_text='Technical Contact', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tech_ccs', to='organisation.DepartmentUser'),
        ),
        migrations.AlterModelOptions(
            name='departmentuser',
            options={},
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='name',
            field=models.CharField(db_index=True, help_text='Format: [Given name] [Surname]', max_length=128),
        ),
        migrations.AddField(
            model_name='departmentuser',
            name='location',
            field=models.ForeignKey(blank=True, help_text='Current place of work.', null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.Location'),
        ),
        migrations.AlterField(
            model_name='location',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='location_manager', to='organisation.DepartmentUser'),
        ),
        migrations.AlterField(
            model_name='orgunit',
            name='name',
            field=models.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name='costcentre',
            name='org_position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.OrgUnit', unique=True),
        ),
        migrations.AlterField(
            model_name='costcentre',
            name='org_position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.OrgUnit'),
        ),
        migrations.AddField(
            model_name='costcentre',
            name='ascender_code',
            field=models.CharField(blank=True, max_length=16, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='location',
            name='ascender_code',
            field=models.CharField(blank=True, max_length=16, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='costcentre',
            name='division_name',
            field=models.CharField(blank=True, choices=[('BCS', 'DBCA Biodiversity and Conservation Science'), ('BGPA', 'Botanic Gardens and Parks Authority'), ('CBS', 'DBCA Corporate and Business Services'), ('CPC', 'Conservation and Parks Commission'), ('ODG', 'Office of the Director General'), ('PWS', 'Parks and Wildlife Service'), ('RIA', 'Rottnest Island Authority'), ('ZPA', 'Zoological Parks Authority')], max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='departmentuser',
            name='dir_sync_enabled',
            field=models.NullBooleanField(default=None),
        ),
        migrations.AddField(
            model_name='departmentuser',
            name='mail_nickname',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='departmentuser',
            name='manager',
            field=models.ForeignKey(blank=True, help_text='Staff member who manages this employee', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='manages', to='organisation.DepartmentUser'),
        ),
        migrations.AddField(
            model_name='departmentuser',
            name='proxy_addresses',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=254), blank=True, help_text='Email aliases', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='account_type',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(2, 'L1 User Account - Permanent'), (3, 'L1 User Account - Agency contract'), (0, 'L1 User Account - Department fixed-term contract'), (8, 'L1 User Account - Seasonal'), (6, 'L1 User Account - Vendor'), (7, 'L1 User Account - Volunteer'), (1, 'L1 User Account - Other/Alumni'), (11, 'L1 User Account - RoomMailbox'), (12, 'L1 User Account - EquipmentMailbox'), (10, 'L2 Service Account - System'), (5, 'L1 Group (shared) Mailbox - Shared account'), (9, 'L1 Role Account - Role-based account'), (4, 'Terminated'), (14, 'Unknown - AD disabled'), (15, 'Cleanup - Permanent'), (16, 'Unknown - AD active')], help_text='Employee network account status (should match Alesco status)', null=True),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='active',
            field=models.BooleanField(default=True, editable=False, help_text='Account is enabled/disabled within Active Directory.'),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='azure_guid',
            field=models.CharField(blank=True, editable=False, help_text='Azure AD ObjectId', max_length=48, null=True, unique=True, verbose_name='Azure GUID'),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='cost_centre',
            field=models.ForeignKey(blank=True, help_text='Cost centre to which the employee currently belongs', null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.CostCentre'),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='email',
            field=models.EmailField(editable=False, help_text='Account primary email address', max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='given_name',
            field=models.CharField(blank=True, help_text='Legal first name (matches birth certificate/passport/etc.)', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='location',
            field=models.ForeignKey(blank=True, help_text='Current physical workplace.', null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.Location'),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='mobile_phone',
            field=models.CharField(blank=True, help_text='Work mobile number', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='name',
            field=models.CharField(help_text='Format: [Given name] [Surname]', max_length=128, verbose_name='display name'),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='surname',
            field=models.CharField(blank=True, help_text='Legal surname (matches birth certificate/passport/etc.)', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='telephone',
            field=models.CharField(blank=True, help_text='Work telephone number', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='title',
            field=models.CharField(blank=True, help_text='Occupation position title (should match Alesco)', max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='departmentuser',
            name='assigned_licences',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=254), blank=True, help_text='Assigned Office 365 licences', null=True, size=None),
        ),
        migrations.CreateModel(
            name='ADAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('action_type', models.CharField(choices=[('Change email', 'Change email'), ('Change account field', 'Change account field'), ('Disable account', 'Disable account'), ('Enable account', 'Enable account')], max_length=128)),
                ('ad_field', models.CharField(blank=True, help_text='Name of the field in Active Directory', max_length=128, null=True)),
                ('ad_field_value', models.TextField(blank=True, help_text='Value of the field in Active Directory', null=True)),
                ('field', models.CharField(blank=True, help_text='Name of the field in IT Assets', max_length=128, null=True)),
                ('field_value', models.TextField(blank=True, help_text='Value of the field in IT Assets', null=True)),
                ('completed', models.DateTimeField(blank=True, editable=False, null=True)),
                ('completed_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('department_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisation.DepartmentUser')),
            ],
            options={
                'verbose_name': 'AD action',
                'verbose_name_plural': 'AD actions',
            },
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='email',
            field=django.contrib.postgres.fields.citext.CIEmailField(editable=False, help_text='Account primary email address', max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='org_unit',
            field=models.ForeignKey(blank=True, help_text='The organisational unit to which the employee belongs.', null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.OrgUnit', verbose_name='organisational unit'),
        ),
        migrations.AddField(
            model_name='orgunit',
            name='division_unit',
            field=models.ForeignKey(blank=True, help_text='Division-level unit to which this unit belongs', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='division_orgunits', to='organisation.OrgUnit'),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='employee_id',
            field=models.CharField(blank=True, help_text='Ascender employee number', max_length=128, null=True, unique=True, verbose_name='Employee ID'),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='position_type',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Full time'), (1, 'Part time'), (2, 'Casual'), (3, 'Other')], default=0, help_text='Employee position working arrangement (Ascender employment status)', null=True),
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='preferred_name',
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.RenameField(
            model_name='departmentuser',
            old_name='alesco_data',
            new_name='ascender_data',
        ),
        migrations.AlterField(
            model_name='departmentuser',
            name='ascender_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, help_text='Cache of staff Ascender data', null=True),
        ),
        migrations.AddField(
            model_name='departmentuser',
            name='ascender_data_updated',
            field=models.DateTimeField(editable=False, null=True),
        ),
    ]
